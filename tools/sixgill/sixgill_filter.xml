<tool id="sixgill_filter" name="sixgill filter" version="@version@.0">
    <description>Build a metapeptide database from metagenome fastq files</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <expand macro="stdio" />
    <version_command>sixgill_filter --version</version_command>
    <command><![CDATA[
        sixgill_filter 
            --out=metagene_output_db.tsv.gz
            #if str($sec_filter.minaaseqlength) != '':
                --minaaseqlength=$sec_filter.minaaseqlength
            #end if
            #if str($sec_filter.minqualscore) != '':
                --minqualscore=$sec_filter.minqualscore
            #end if
            #if str($sec_filter.minorflength) != '':
                --minorflength=$sec_filter.minorflength
            #end if
            #if str($sec_filter.minlongesttryppeplen) != '':
                --minlongesttryppeplen=$sec_filter.minlongesttryppeplen
            #end if
            #if str($sec_filter.minreadcount) != '':
                --minreadcount=$sec_filter.minreadcount
            #end if
            #if str($sec_filter.maxmetapeptides) != '':
                --maxmetapeptides=$sec_filter.maxmetapeptides
            #end if
            #if $sec_mg.metagenefile:
                --metagenefile="$sec_mg.metagenefile"    
                #if str($sec_mg.minmetagenescore) != 'None':
                    --minmetagenescore=$sec_mg.minmetagenescore
                #end if
            #end if
            $metagene_input_db
            #if 'fa' in str($metagene_outputs):
                && sixgill_makefasta --type=aa --out="metagene_output.fa" "metagene_output_db.tsv.gz"
                --outfasta=metagene_output.fa
            #end if
    ]]></command>
    <inputs>
        <param name="metagene_input_db" type="data" format="metapeptides.tsv.gz" label="metagene database" 
         help="Can be generated with sixgill_build"/>
        <param name="minorflength" type="integer" value="40" min="0" optional="true" label="minorflength"
                help="min length of ORF-portion"/>
        <param name="minaaseqlength" type="integer" value="10" min="0" optional="true" label="minaaseqlength"
                help="min AA sequence length"/>
        <param name="minqualscore" type="integer" value="30" min="0" optional="true" label="minqualscore"
                help="min base-call phred score across any NT in a metapeptide"/>
        <param name="minlongesttryppeplen" type="integer" value="7" min="0" optional="true" label="minlongesttryppeplen"
                help="minimum length of the longest tryptic peptide"/>
        <param name="minreadcount" type="integer" value="2" min="1" optional="true" label="minreadcount"
                help="minimum read count"/>
        <param name="minmetagenescore" type="integer" value="" min="-1" optional="true" label="minmetagenescore"
                help="minimum MetaGene score"/>
        <param name="maxmetapeptides" type="integer" value="" optional="true" label="maxmetapeptides"
                help="maximum number of metapeptides to write"/>
        <param name="metagene_outputs" type="select" multiple="true" optional="false" label="select outputs">
            <option value="db" selected="true">metapeptide database</option>
            <option value="fa" selected="true">metapeptide protein fasta</option>
        </param>
    </inputs>
    <outputs>
        <data name="output_db" format="metapeptides.tsv.gz" label="metagene.tsv.gz" from_work_dir="metagene_output_db.tsv.gz">
            <filter>'db' in metagene_outputs</filter>
        </data>
        <data name="output_fa" format="fasta" label="metagene.fa" from_work_dir="metagene_output.fa">
            <filter>'fa' in metagene_outputs</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="metagene_input_db" ftype="metapeptides.tsv.gz" value="metagene_nometagene_merged.metapeptides.gz"/>
            <param name="minreadcount" value="2"/>
            <param name="minaaseqlength" value="12"/>
            <param name="metagene_outputs" value="fa"/>
            <output name="output_fa">
                <assert_contents>
                    <has_text text="DLRILLRERLVAGDSDEAAVDFIVDR" />
                    <not_has_text text="YHNFEGYRWR" />
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
usage: sixgill_filter [-h] --out OUT [--minorflength MINORFLENGTH]
                      [--minaaseqlength MINAASEQLENGTH]
                      [--minreadcount MINREADCOUNT]
                      [--minqualscore MINQUALSCORE]
                      [--minlongesttryppeplen MINLONGESTTRYPPEPLEN]
                      [--minmetagenescore MINMETAGENESCORE]
                      [--maxmetapeptides MAXMETAPEPTIDES] [--debug]
                      metapeptidefile

Filter a metapeptide database.

positional arguments:
  metapeptidefile       input metapeptide database file

optional arguments:
  -h, --help            show this help message and exit
  --out OUT             output metapeptide database file
  --minorflength MINORFLENGTH
                        minimum ORF length
  --minaaseqlength MINAASEQLENGTH
                        minimum AA sequence length
  --minreadcount MINREADCOUNT
                        minimum read count
  --minqualscore MINQUALSCORE
                        minimum basecall quality
  --minlongesttryppeplen MINLONGESTTRYPPEPLEN
                        minimum length of the longest tryptic peptide
  --minmetagenescore MINMETAGENESCORE
                        Minimum MetaGene score (-1 for none)
  --maxmetapeptides MAXMETAPEPTIDES
                        maximum number of metapeptides to write
  --debug               Enable debug logging

    ]]></help>
    <expand macro="citations" />
</tool>
