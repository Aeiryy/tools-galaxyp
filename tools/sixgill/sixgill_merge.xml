<tool id="sixgill_merge" name="sixgill merge" version="@version@.0">
    <description>Build a metapeptide database from metagenome fastq files</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <expand macro="stdio" />
    <command><![CDATA[
        sixgill_merge 
            --out=metagene_output_db.tsv.gz
            #for (i,metagene_input_db) in enumerate(metagene_input_dbs)
                "$metagene_input_db"
            #end for
            #if 'fa' in str($metagene_outputs):
                && sixgill_makefasta --type=aa --out="metagene_output.fa" "metagene_output_db.tsv.gz"
                --outfasta=metagene_output.fa
            #end if
    ]]></command>
    <inputs>
        <param name="metagene_input_dbs" type="data" format="metapeptides.tsv.gz" multiple="true" optional="false" label="metagene database" 
         help="Can be generated with sixgill_build"/>
        <param name="metagene_outputs" type="select" multiple="true" optional="false" label="select outputs">
            <option value="db" selected="true">metapeptide database</option>
            <option value="fa" selected="true">metapeptide protein fasta</option>
        </param>
    </inputs>
    <outputs>
        <data name="output_db" format="metapeptides.tsv.gz" label="metagene.tsv.gz" from_work_dir="metagene_output_db.tsv.gz">
            <filter>'db' in metagene_outputs</filter>
        </data>
        <data name="output_fa" format="fasta" label="metagene.fa" from_work_dir="metagene_output.fa">
            <filter>'fa' in metagene_outputs</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="metagene_input_dbs" ftype="metapeptides.tsv.gz" 
                   value="tdb_metagene.metapeptides.gz,testdb_nometagene.metapeptides.gz"/>
            <output name="output_fa">
                <assert_contents>
                    <has_text text="RQGLREPTDFSLTDPHK" />
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
usage: sixgill_merge [-h] --out OUT [--debug]
                     metapeptidedbfiles [metapeptidedbfiles ...]

Merge multiple metapeptide database files into a single metapeptide database.
Optionally, filter simultaneously.

positional arguments:
  metapeptidedbfiles  input metapeptide database files

optional arguments:
  -h, --help          show this help message and exit
  --out OUT           output file
  --debug             Enable debug logging

    ]]></help>
    <expand macro="citations" />
</tool>
