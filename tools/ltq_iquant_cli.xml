<tool id="ltq_iquant_cli" name="LTQ-iQuant CLI" version="0.2.0">
  <requirements>
    <requirement type="package" version="22">binaries_for_package_ltq_iquant_cli</requirement>
  </requirements>

  <description>Perform quantitation on data labeled with isobaric tags.</description>
  <command>
    LTQ-iQuant-cli --report_type ${peptide_report.report_type} --group_type ${group_type} --report ${peptide_report.report} --type ${quant_type} --output $output
    #if $training.specify
    --weights ${training.weights}
    #end if
    #for $input in $inputs:
    "${input}"
    #end for
  </command>
  <inputs>
    <conditional name="peptide_report">
      <param name="report_type" type="select" label="Identification Report Type">
        <option value="PEPXML">PepXML</option>
        <option value="SCAFFOLD">Scaffold Spectrum Report</option>
        <option value="PROTEIN_PILOT">ProteinPilot Peptide Report</option>
        <option value="MAX_QUANT">MaxQuant MSMS Export</option>
      </param>
      <when value="PEPXML">
        <param format="pepxml" name="report" type="data" label="Input PepXML"/>
      </when>
      <when value="SCAFFOLD">
        <param format="text" name="report" type="data" label="Input Scaffold Report"/>
      </when>
      <when value="PROTEIN_PILOT">
        <param format="text" name="report" type="data" label="Input ProteinPilot Peptide Report"/>
      </when>
      <when value="MAX_QUANT">
        <param format="text" name="report" type="data" label="Input MaxQuant MSMS Export"/>
      </when>
    </conditional>
    <param name="inputs" multiple="true" type="data" format="mzxml,mzml" label="Peaklist(s)" help=""/>
    <param name="quant_type" type="select" label="Quantification type">
      <option value="FOUR_PLEX">iTRAQ 4-plex</option>
      <option value="EIGHT_PLEX">iTRAQ 8-plex</option>
      <option value="TMT_TWO_PLEX">TMT 2-plex</option>
      <option value="TMT_SIX_PLEX">TMT 6-plex</option>
    </param>
    <param name="group_type" type="select" label="Quantify based on grouping of">
      <option value="PROTEIN">Proteins</option>
      <option value="PEPTIDE">Peptides</option>
      <option value="PEPTIDE_WITH_MODIFICATIONS">Peptides with modifications</option>
      <option value="PEPTIDE_WITH_UNIQUE_MODIFICATION">Peptide with an identified modification</option>
    </param>
    <conditional name="training">
        <param name="specify" type="boolean" label="Specify Trained Intensity Weights (Advanced)" checked="false" />
        <when value="false">
        </when>
        <when value="true">
          <param name="weights" type="data" label="Trained Weights XML File" format="xml" />
        </when>
      </conditional>
  </inputs>

  <outputs>
    <data format="tabular" name="output" />
  </outputs>

  <stdio>
    <exit_code range="1:" level="fatal" description="Unknown error, exit code non-zero" />
  </stdio>

  <help>
**What it does**

iQuant is a tool that performs tag based isobaric quantification by implementing a technique assigning collective reporter ion intensity-based weights to each peptide abundance ratio and calculating a protein's weighted average abundance ratio and p-value.

iQuant requires identification results from an upstream identification pipeline along with XML peak lists for the data (mzXML is well supported and an mzML option has been provided for testing).

------

**Citation**

For the underlying tool, please cite ``Onsongo G, Stone MD, Van Riper SK, Chilton J, Wu B, Higgins L, Lund TC, Carlis JV, Griffin TJ, 2010. LTQ-iQuant: A freely available software pipeline for automated and accurate protein quantification of isobaric tagged peptide data from LTQ instruments. Proteomics. 10(19).  doi: 10.1002/pmic.201000189.``

If you use this tool in Galaxy, please cite Chilton J, et al. https://bitbucket.org/galaxyp/iquant

  </help>
</tool>
