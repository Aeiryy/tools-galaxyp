<?xml version="1.0"?>
<tool id="idpqonvert" name="idpQonvert" version="0.1.0">
    <description>Prepare identification results for IDPicker</description>
    <macros>
        <xml name="normalizationOptions">
            <option value="off" selected="true">None</option>
            <option value="quantile">Quantile</option>
            <option value="linear">Linear</option>
        </xml>
    </macros>
    <requirements>
        <requirement type="package" version="3.0.8789">bumbershoot</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" level="fatal" description="Job Failed" />
        <regex match="^Error:.*$" source="both" level="fatal" />
    </stdio>
    <command>
<![CDATA[
        #set $db_name = $input_database.display_name.replace(".fasta", "") + ".fasta"
        #set $input_name = $input.display_name
        #set $output_name = $input_name.split(".")[0] + ".idpDB"
        ln -s '$input' '${input_name}';
        ln -s '$input_database' '${db_name}';

        idpQonvert
            -DecoyPrefix '${decoy_prefix}'
            -WriteQonversionDetails true
            -ProteinDatabase '${db_name}'
            -MaxFDR $max_fdr
            -EmbedSpectrumScanTimes false
            -EmbedSpectrumSources false
            #if $scoring.override_scoring
                #set $score_info = []
                #for $engine in ["myrimatch:mvh", "xcorr", "sequest:xcorr", "sequest:deltacn", "mascot:score", "x!tandem:expect", "x!tandem:hyperscore", "ms-gf:specevalue"]
                    #set $name = $engine.replace(":", "_").replace("!","")
                    #set $weight = $getVar("scoring." + $name + "." + $name + "_weight.value")
                    #set $type = $getVar("scoring." + $name + "." + $name + "_type.value")
                    #set $score_info = $score_info + [str($weight) + " " + $type + " " + $engine]
                    #continue
                #end for
                #for $i, $s in enumerate($scoring.extra_score)
                    #set $name = $s.extra_score_name
                    #set $type = $s.extra_score_normalization
                    #set $weight = $s.extra_score_weight
                    #set $score_info = $score_info + [str($weight) + " " + $type + " " + $name]
                #end for
                #set $score_str = "; ".join($score_info)
                -ScoreInfo '$score_str'
            #end if
            #if $advanced_options.use_advanced_options
                -MaxImportFDR $advanced_options.max_import_fdr
                -MaxResultRank $advanced_options.max_result_rank
                -RerankMatches $advanced_options.rerank_matches
                -Gamma $advanced_options.gamma
                -Nu $advanced_options.nu
                -PolynomialDegree $advanced_options.polynomial_degree
                -TruePositiveThreshold $advanced_options.true_positive_threshold
                -MaxTrainingRank $advanced_options.max_training_rank
                -SVMType $advanced_options.svm_type
                -Kernel $advanced_options.kernel
                -ChargeStateHandling $advanced_options.charge_state_handling
                -QonverterMethod $advanced_options.qonverter_method
                -MinPartitionSize $advanced_options.min_partition_size
            #end if
            '${input_name}';
        mv '$output_name' output
]]>
    </command>
    <inputs>
        <param name="input" type="data" format="mzid,raw_pepxml" label="Input mzIdentML/pepXML file(s)" />
        <param name="input_database" format="fasta" type="data" label="Protein Database"/>
        <param name="decoy_prefix" type="text" label="Decoy Prefix"/>
        <param name="max_fdr" type="float" label="Max FDR" value="0.05" />
        <conditional name="advanced_options">
            <param name="use_advanced_options" type="boolean" truevalue="true" falsevalue="false" label="Set Advanced Options" />
            <when value="false" />
            <when value="true">
                <param name="max_import_fdr" type="float" label="Max Import FDR" value="0.25" />
                <param name="max_result_rank" type="integer" label="Max Result Rank" value="3" />
                <param name="max_training_rank" type="integer" label="Max Training Rank" value="1" />
                <param name="rerank_matches" type="boolean" label="Rerank Matches" checked="false" truevalue="true" falsevalue="false" />
                <param name="gamma" type="float" label="Gamma" value="5" />
                <param name="nu" type="float" label="Nu" value="-0.5" />
                <param name="true_positive_threshold" type="float" label="True Positive Threshold" value="0.01" />
                <param name="polynomial_degree" type="integer" label="Polynomial Degree" value="3" />
                <param name="min_partition_size" type="integer" label="Minimum Partition Size" value="10" />
                <param name="svm_type" label="SVM Type" type="select">
                    <option value="CSVC" selected="true">CSVC</option>
                    <option value="NuSVC">Nu SCV</option>
                    <option value="OneClass">One Class</option>
                    <option value="NuSVR">Nu SVR</option>
                    <option value="EpsilonSVR">Epsilon SVR</option>
                </param>
                <param name="kernel" label="Kernel" type="select">
                    <option value="Linear" selected="true">Linear</option>
                    <option value="Polynomial">Polynomial</option>
                    <option value="RBR">Radial Basis Function</option>
                    <option value="Sigmoid">Sigmoid</option>
                </param>
                <param name="charge_state_handling" label="Charge State Handling" type="select">
                    <option value="Partition" selected="true">Partition</option>
                    <option value="Ignore">Ignore</option>
                    <option value="Feature">Feature</option>
                </param>
                <param name="terminal_specificity_handling" label="Terminal Specificity Handling" type="select">
                    <option value="Partition" selected="true">Partition</option>
                    <option value="Ignore">Ignore</option>
                    <option value="Feature">Feature</option>
                </param>
                <param name="missed_cleavages_handling" label="Missed Cleavages Handling" type="select">
                    <option value="Ignore" selected="true">Ignore</option>
                    <option value="Feature">Feature</option>
                </param>
                <param name="missed_cleavages_handling" label="Missed Cleavages Handling" type="select">
                    <option value="Ignore" selected="true">Ignore</option>
                    <option value="Feature">Feature</option>
                </param>
                <param name="mass_error_handling" label="Mass Error Handling" type="select">
                    <option value="Ignore" selected="true">Ignore</option>
                    <option value="Feature">Feature</option>
                </param>
                <param name="qonverter_method" label="Qonverter Method" type="select">
                    <option value="MonteCarlo" selected="true">Monte Carlo</option>
                    <option value="SingleSVM">SVM (single)</option>
                    <option value="PartitionSVM">SVM (parition)</option>
                    <option value="StaticWeighted">Static Weighted</option>
                </param>
            </when>
        </conditional>
        <conditional name="scoring">
            <param name="override_scoring" type="boolean" truevalue="true" falsevalue="false" label="Modify Search Engine Scores/Weights" />
            <when value="false" />
            <when value="true">
                <section name="myrimatch_mvh" title="Myrimatch (mvh) Score/Weight" expanded="False">
                    <param name="myrimatch_mvh_weight" label="Myrimatch (mvh) Weight" type="float" value="1" />
                    <param name="myrimatch_mvh_type" label="Myrimatch (mvh) Normalization" type="select"><expand macro="normalizationOptions" /></param>
                </section>
                <section name="xcorr" title="Non-Sequest (xcorr) Score/Weight" expanded="False">
                    <param name="xcorr_weight" label="XCorr Weight" type="float" value="1" />
                    <param name="xcorr_type" label="XCorr Normalization" type="select"><expand macro="normalizationOptions" /></param>
                </section>
                <section name="sequest_xcorr" title="Sequest (xcorr) Score/Weight" expanded="False">
                    <param name="sequest_xcorr_weight" label="Sequest (xcorr) Weight" type="float" value="1" />
                    <param name="sequest_xcorr_type" label="Sequest (xcorr) Normalization" type="select"><expand macro="normalizationOptions" /></param>
                </section>
                <section name="sequest_deltacn" title="Sequest (deltacn) Score/Weight" expanded="False">
                    <param name="sequest_deltacn_weight" label="Sequest (deltacn) Weight" type="float" value="1" />
                    <param name="sequest_deltacn_type" label="Sequest (deltacn) Normalization" type="select"><expand macro="normalizationOptions" /></param>
                </section>
                <section name="mascot_score" title="Mascot (score) Score/Weight" expanded="False">
                    <param name="mascot_score_weight" label="Mascot Score Weight" type="float" value="1" />
                    <param name="mascot_score_type" label="Mascot Score Normalization" type="select"><expand macro="normalizationOptions" /></param>
                </section>
                <section name="xtandem_expect" title="X! Tandem (expect) Score/Weight" expanded="False">
                    <param name="xtandem_expect_weight" label="X! Tandem (expectation) Weight" type="float" value="-1" />
                    <param name="xtandem_expect_type" label="X! Tandem (expectation) Normalization" type="select"><expand macro="normalizationOptions" /></param>
                </section>
                <section name="xtandem_hyperscore" title="X! Tandem (hyperscore) Score/Weight" expanded="False">
                    <param name="xtandem_hyperscore_weight" label="X! Tandem (hyperscore) Weight" type="float" value="1" />
                    <param name="xtandem_hyperscore_type" label="X! Tandem (hyperscore)Normalization" type="select"><expand macro="normalizationOptions" /></param>
                </section>
                <section name="ms-gf_specevalue" title="MS-GF+ (specevalue) Score/Weight" expanded="False">
                    <param name="ms-gf_specevalue_weight" label="MS-GF+ (specevalue) Weight" type="float" value="-1" />
                    <param name="ms-gf_specevalue_type" label="MS-GF+ (specevalue) Normalization" type="select"><expand macro="normalizationOptions" /></param>
                </section>
                <repeat name="extra_score" title="Extra Search Engine Score/Weight">
                    <param name="extra_score_name" label="Name" type="text" help="For scores in the PSI-MS controlled vocabulary, this field must match the name for that score; for other scores, the UserParam name or pepXML name will suffice." value="SearchEngineName" />
                    <param name="extra_score_normalization" label="Normalization Method" type="select"><expand macro="normalizationOptions" /></param>
                    <param name="extra_score_weight" label="Weight" type="float" help="Negative weights indicate that a lower score is better (e.g. expectation value, p-value)." value="1" />
                </repeat>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data format="idpdb" name="output" from_work_dir="output" />
    </outputs>
    <tests>
        <test>
            <param name="input" value="../../idpqonvert/test-data/input/201208-378803-mm.pepXML" />
            <param name="input_database" value="../../myrimatch/test-data/input/cow.protein.PRG2012-subset.fasta" />
            <param name="max_fdr" value="0.05" />
            <param name="scoring.override_scoring" value="2" /> 
            <param name="filter_at_gene_level_condition.min_spectra" value="2" />
            <param name="filter_at_gene_level_condition.min_additional_peptides" value="1" />
            <param name="min_spectra_per_distinct_match" value="1" />
            <param name="min_spectra_per_distinct_peptide" value="1" />
            <param name="max_protein_groups_per_peptide" value="10" />
            <output name="output" file="../../idpqonvert/test-data/201208-378803-mm.idpDB" compare="sim_size" delta_size="500000" />
        </test>
        <test>
            <param name="input" value="../../idpqonvert/test-data/input/201208-378803-cm.pep.xml" />
            <param name="input_database" value="../../myrimatch/test-data/input/cow.protein.PRG2012-subset.fasta" />
            <param name="max_fdr" value="0.05" />
            <param name="scoring.override_scoring" value="2" /> 
            <param name="filter_at_gene_level_condition.min_spectra" value="2" />
            <param name="filter_at_gene_level_condition.min_additional_peptides" value="1" />
            <param name="min_spectra_per_distinct_match" value="1" />
            <param name="min_spectra_per_distinct_peptide" value="1" />
            <param name="max_protein_groups_per_peptide" value="10" />
            <output name="output" file="../../idpqonvert/test-data/201208-378803-cm.idpDB" compare="sim_size" delta_size="500000" />
        </test>
        <test>
            <param name="input" value="../../idpqonvert/test-data/input/201208-378803-msgf.mzid" />
            <param name="input_database" value="../../myrimatch/test-data/input/cow.protein.PRG2012-subset.fasta" />
            <param name="max_fdr" value="0.05" />
            <param name="scoring.override_scoring" value="2" /> 
            <param name="filter_at_gene_level_condition.min_spectra" value="2" />
            <param name="filter_at_gene_level_condition.min_additional_peptides" value="1" />
            <param name="min_spectra_per_distinct_match" value="1" />
            <param name="min_spectra_per_distinct_peptide" value="1" />
            <param name="max_protein_groups_per_peptide" value="10" />
            <output name="output" file="../../idpqonvert/test-data/201208-378803-msgf.idpDB" compare="sim_size" delta_size="500000" />
        </test>
    </tests>
    <help>
<![CDATA[
**What it does**

Creates IDPicker 3 idpDB files from pepXML and mzIdentML files. The input files should be unfiltered and must come from a target/decoy database search.
]]>
    </help>
    <citations>
        <citation type="doi">10.1021/pr900360j</citation>
        <citation type="bibtex">@misc{toolsGalaxyP, author = {Chilton, J, Chambers MC, et al.}, title = {Galaxy Proteomics Tools}, publisher = {GitHub}, journal = {GitHub repository},
                                      year = {2015}, url = {https://github.com/chambm/tools-galaxyp}}</citation> <!-- TODO: fix substitution of commit ", commit = {$sha1$}" -->
    </citations>
</tool>
