<tool id="myrimatch" version="0.1.0" name="MyriMatch">
    <description></description>
    <requirements>
        <requirement type="package" version="3.0.8738">bumbershoot</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" level="fatal" description="Job Failed" />
        <regex match="^Could not find the default configuration file.*$"
          source="both"
          level="warning" />
    </stdio>
    <command>
        #set $mod_rep_chars = "*$^@.%!"
        #set $db_name = $input_database.display_name.replace(".fasta", "") + ".fasta"
        #if $output_type.value == "mzid"
            #set $output_ext="mzid"
            #set $output_format="mzIdentML"
        #else
            #set $output_ext="pepXML"
            #set $output_format="pepXML"
        #end if
        #set $input_name = $input.display_name
        #set $output_name = $input_name.split(".")[0] + "." + $output_ext
        #set $static_mods_str = ""
        #for $static_mod in $static_mods
          #set $static_mods_str = $static_mods_str + "" + str($static_mod.aa) + " " + str($static_mod.mass)
        #end for
            #set $dynamic_mods_str = ""
            #set $dynamic_mod_index = 0
        #for $dynamic_mod in $dynamic_mods
            #set $dynamic_mods_str = $dynamic_mods_str + "" + str($dynamic_mod.motif) + " " + $mod_rep_chars[$dynamic_mod_index] + " " + str($dynamic_mod.mass)
            #set $dynamic_mod_index = $dynamic_mod_index + 1
        #end for
        ln -s '$input' '${input_name}';
        ln -s '$input_database' '${db_name}';
        nice myrimatch -cpus 1 -DecoyPrefix '${decoy_prefix}'
        -ProteinDatabase '${db_name}'
        -OutputFormat '${$output_format}'
        '${input_name}'
        -StaticMods '${static_mods_str}'
        -DynamicMods '${dynamic_mods_str}'
        -CleavageRules '${protease}'
        #set $precursor_type = $precursor_tolerance.precursor_type
        -PrecursorMzToleranceRule '${precursor_type}'
        #if $precursor_type == "auto" or $precursor_type == "mono"
          -MonoPrecursorMzTolerance '${precursor_tolerance.mono_precursor_mz_tolerance}${precursor_tolerance.mono_precursor_mz_tolerance_units}'
        #end if
        #if $precursor_type == "auto" or $precursor_type == "avg"
          -AvgPrecursorMzTolerance '${precursor_tolerance.avg_precursor_mz_tolerance}${precursor_tolerance.avg_precursor_mz_tolerance_units}'
        #end if
        -FragmentMzTolerance '${fragment_mz_tolerance}${fragment_mz_tolerance_units}'
        #if $advanced.use_advanced
            -UseSmartPlusThreeModel $advanced.use_smart_plus_three_model
            -MinPeptideLength $advanced.min_peptide_length
            -MaxPeptideLength $advanced.max_peptide_length
            #if $advanced.max_peak_count
              -MaxPeakCount $advanced.max_peak_count
            #end if
            #if $advanced.fragmentation_rule.override
              -FragmentationAutoRule false -FragmentationRule 'manual:${advanced.fragmentation_rule.fragmentation_rule}'
            #end if
        #end if
        ;
        mv '$output_name' output
    </command>
    <inputs>
          <param name="input" type="data" format="mzml,mzxml,mgf,ms2,mz5" label="Input File"/>
          <param name="output_type" type="select" label="Output Type">
              <option value="raw_pepxml">pepXML</option>
              <option value="mzid">mzIdentML</option>
          </param>
          <param name="input_database" format="fasta" type="data" label="Protein Database"/>
          <param name="decoy_prefix" type="text" label="Decoy Prefix" value="rev_"/>
          <param name="protease" type="select" label="Protease">
               <option value="Trypsin/P">Trypsin/P (allows for cut after K or R)</option>
               <option value="Trypsin">Trypsin (normal trypsin cut, disallows cutting when the site is before a proline)</option>
               <option value="Chymotrypsin">Chymotrypsin (allows cut after F,Y,W,L. Disallows cutting before proline)</option>
               <option value="TrypChymo">TrypChymo (combines "Trypsin/P" and "Chymotrypsin" cleavage rules)</option>
               <option value="Lys-C">Lys-C</option>
               <option value="Lys-C/P">Lys-C/P (Lys-C, disallowing cutting before proline)</option>
               <option value="Asp-N">Asp-N</option>
               <option value="PepsinA">PepsinA (cuts right after F, L)</option>
               <option value="CNBr">CNBr (cyanogen bromide)</option>
               <option value="Formic_acid">Formic acid</option>
          </param>
          <repeat name="static_mods" title="Static Modifications">
              <param name="aa" type="text" label="Amino Acid" />
              <param name="mass" type="float" label="Mass" value="0" />
          </repeat>
          <repeat name="dynamic_mods" title="Dynamic Modifications" max="7">
              <param name="motif" type="text" label="Amino Acid Motif" />
              <param name="mass" type="float" label="Mass" value="0" />
          </repeat>
          <conditional name="precursor_tolerance">
              <param name="precursor_type" type="select" label="Precursor Mass Type" help="For data from Thermo instruments, using the 'auto' setting on a will automatically choose monoisotopic or average mass values, for other instruments monoisotopic or average should be chosen.">
                  <option value="auto">Auto</option>
                  <option value="avg">Average</option>
                  <option value="mono">Monoisotopic</option>
              </param>
              <when value="auto">
                  <param name="mono_precursor_mz_tolerance" type="float" value="10" label="Monoisotopic Precursor m/z Tolerance" />
                  <param name="mono_precursor_mz_tolerance_units" type="select" label="Monoisotopic Precursor m/z Tolerance Units">
                      <option value="ppm">Parts per million</option>
                      <option value="daltons">Daltons</option>
                  </param>
                  <param name="avg_precursor_mz_tolerance" type="float" value="1.5" label="Average Precursor m/z Tolerance" />
                  <param name="avg_precursor_mz_tolerance_units" type="select" label="Average Precursor m/z Tolerance Units">
                      <option value="ppm">Parts per million</option>
                      <option value="daltons" selected="true">Daltons</option>
                  </param>
              </when>
              <when value="avg">
                  <param name="avg_precursor_mz_tolerance" type="float" value="1.5" label="Average Precursor m/z Tolerance" />
                  <param name="avg_precursor_mz_tolerance_units" type="select" label="Average Precursor m/z Tolerance Units">
                      <option value="ppm">Parts per million</option>
                      <option value="daltons" selected="true">Daltons</option>
                  </param>
              </when>
              <when value="mono">
                  <param name="mono_precursor_mz_tolerance" type="float" value="10" label="Monoisotopic Precursor m/z Tolerance" />
                  <param name="mono_precursor_mz_tolerance_units" type="select" label="Monoisotopic Precursor m/z Tolerance Units">
                      <option value="ppm">Parts per million</option>
                      <option value="daltons">Daltons</option>
                  </param>
              </when>
          </conditional>
          <param name="fragment_mz_tolerance" type="float" value="0.5" label="Fragement m/z Tolerance" />
          <param name="fragment_mz_tolerance_units" type="select" label="Fragment m/z Tolerance Units">
              <option value="ppm">Parts per million</option>
              <option value="daltons" selected="true">Daltons</option>
          </param>
          <conditional name="advanced">
              <param name="use_advanced" type="boolean" label="Set Advanced Options" />
              <when value="false">
              </when>
              <when value="true">
                  <param name="max_peak_count" type="integer" value="" optional="true" label="Use Max Peaks" help="Filter out all but the specified number of peaks, keep empty to use all peaks." />
                  <conditional name="fragmentation_rule">
                      <param name="override" type="boolean" label="Override Fragmentation Rule (Ion Series)" />
                      <when value="false" />
                      <when value="true">
                          <param type="text" name="fragmentation_rule" label="Fragmentation Rule" help="specify as a comma-separated list of a, b, c, x, y, z, or z* (z+1), e.g. b,y,z" />
                      </when>
                  </conditional>
                  <param name="min_peptide_length" type="integer" value="5" label="Minimum Peptide Length" />
                  <param name="max_peptide_length" type="integer" value="75" label="Maximum Peptide Length" />
                  <param name="use_smart_plus_three_model" type="boolean" truevalue="true" falsevalue="false" label="Use Smart Plus 3 Model" help="For +3 and higher precursors, the fragment ions predicted depend on the way this parameter is set. When this parameter is true, then for each peptide bond, an internal calculation is done to estimate the basicity of the b and y fragment sequence. When this parameter is false, however, ALL possible charge distributions for the fragment ions are generated for every peptide bond." checked="true" />
                  <param name="min_termini_cleavages" type="integer" value="1" label="Minimum Termini Cleavages" />
                  <param name="max_missed_cleavages" type="integer" value="2" label="Maximum Missed Cleavages" />
                  <param name="max_dynamic_mods" type="integer" value="4" label="Maximum Dynamic Mods" />
                  <param name="num_charge_states" type="integer" value="3" label="Number of Charge States" />
                  <param name="max_result_rank" type="integer" value="2" label="Maximum Result Rank" />
                  <param name="monoisotope_adjustment_set" type="text" value="" label="Monoisotope Adjustment Set" />
              </when>
          </conditional>
    </inputs>
    <outputs>
        <data format="raw_pepxml" name="output" from_work_dir="output">
            <change_format>
                <when input="output_type" value="mzid" format="mzid" />
            </change_format>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="input" value="201208-378803.mzML" />
            <param name="input_database" value="cow.protein.PRG2012-subset.fasta" />
            <param name="decoy_prefix" value="XXX_" />
            <param name="static_mods_0|aa" value="C" />
            <param name="static_mods_0|mass" value="58.00548" />
            <param name="dynamic_mods_0|motif" value="M" />
            <param name="dynamic_mods_0|mass" value="15.9949" />
            <param name="dynamic_mods_1|motif" value="(Q" />
            <param name="dynamic_mods_1|mass" value="-17.026" />
            <param name="dynamic_mods_2|motif" value="[QN]" />
            <param name="dynamic_mods_2|mass" value="0.984016" />
            <param name="precursor_type" value="mono" />
            <param name="mono_precursor_mz_tolerance" value="50" />
            <param name="min_termini_cleavages" value="1" />
            <param name="max_missed_cleavages" value="2" />
            <param name="max_dynamic_mods" value="2" />
            <param name="num_charge_states" value="5" />
            <param name="max_result_rank" value="3" />
            <param name="monoisotope_adjustment_set" value="[-1,2]" />
            <param name="use_smart_plus_three_model" value="false" />
            <output name="output" file="201208-378803-mm.pepXML" />
        </test>
    </tests>
    <help>
<![CDATA[
**What it does**

Performs protein identification via database search using MyriMatch.

------

**Citation**

For the underlying tool, please cite `MyriMatch: highly accurate tandem mass spectral peptide identification by multivariate hypergeometric analysis. Tabb DL, Fernando CG, Chambers MC. J Proteome Res. 6(2) 654-61. 2007 Feb. PMCID PMC2525619`

If you use this tool in Galaxy, please cite `Chilton J, Chambers MC, et al. https://github.com/galaxyproteomics/tools-galaxyp/tree/master/tools/myrimatch`
]]>
    </help>
    <citations>
        <citation type="doi">10.1021/pr0604054</citation>
    </citations>
</tool>
