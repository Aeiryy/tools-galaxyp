<tool id="batched_set_list_creator" name="Merge search data" version="3.0.1">
    <description>to nested collections</description>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <command>python $__tool_directory__/nested_collection.py
        --batchsize $batchsize
        #if len($poolids) > 0
            --pool-ids
            #for $pool in $poolids
                '${pool.pool_identifier}'
            #end for
        #end if
        --real-names
        #for $fname in $listtobatch.keys()
            '$fname'
        #end for
        --galaxy-files
        #for $fname in $listtobatch.keys()
            '$listtobatch[$fname]'
        #end for
    </command>
    <inputs>
        <param name="batchsize" type="integer" value="" label="Amount of fractions to batch" />
        <repeat name="poolids" title="Batch pools" help="Pools containing batches (optional, not using this will result in one pool)">
            <param name="pool_identifier" type="text" label="Filename part identifying batchpool" 
            help="Specify part of the input filenames that are unique for each pool, e.g set_A."/>
        </repeat>
        <param name="listtobatch" type="data_collection" collection_type="list" label="List of files to batch" />
    </inputs>
    <outputs>
        <collection name="batched_fractions" type="list:list" label="Pooled batched data">
          <discover_datasets pattern="(?P&lt;identifier_0&gt;[^_]+)_(?P&lt;identifier_1&gt;[^_]+)\.mzid" ext="mzid" visible="true" />
        </collection>
    </outputs>
    <tests>
        <test>
            <param name="batchsize" value="2"/>
            <param name="listtobatch">
                <collection type="list">
                    <element name="fraction_one_spectra" value="empty_file1.mzid"/>
                    <element name="fraction_two_spectra" value="empty_file2.mzid"/>
                    <element name="fraction_three_spectra" value="empty_file3.mzid"/>
                    <element name="fraction_four_spectra" value="empty_file4.mzid"/>
                </collection>
            </param>
            <output_collection name="batched_fractions" type="list:list">
                <element name="pool0">
                    <element name="inputfn0" file="empty_file1.mzid"/>
                    <element name="inputfn1" file="empty_file2.mzid"/>
                </element>
                <element name="pool1">
                    <element name="inputfn0" file="empty_file3.mzid"/>
                    <element name="inputfn1" file="empty_file4.mzid"/>
                </element>
            </output_collection>
        </test>
        <test>
            <param name="batchsize" value="2"/>
            <repeat name="poolids">
                <param name="pool_identifier" value="set1"/>
            </repeat>
            <repeat name="poolids">
                <param name="pool_identifier" value="set2"/>
            </repeat>
            <param name="listtobatch">
                <collection type="list">
                    <element name="fr_one_set1_spectra" value="empty_file1.mzid"/>
                    <element name="fr_two_set1_spectra" value="empty_file2.mzid"/>
                    <element name="fr_three_set1_spectra" value="empty_file3.mzid"/>
                    <element name="fr_one_set2_spectra" value="empty_file4.mzid"/>
                    <element name="fr_two_set2_spectra" value="empty_file5.mzid"/>
                    <element name="fr_three_set2_spectra" value="empty_file6.mzid"/>
                </collection>
            </param>
            <output_collection name="batched_fractions" type="list:list">
                <element name="pool0">
                    <element name="inputfn0" file="empty_file1.mzid"/>
                    <element name="inputfn1" file="empty_file2.mzid"/>
                </element>
                <element name="pool1">
                    <element name="inputfn0" file="empty_file3.mzid"/>
                </element>
                <element name="pool2">
                    <element name="inputfn0" file="empty_file4.mzid"/>
                    <element name="inputfn1" file="empty_file5.mzid"/>
                </element>
                <element name="pool3">
                    <element name="inputfn0" file="empty_file6.mzid"/>
                </element>
            </output_collection>
        </test>
    </tests>
    <help>
    Creates nested collection containing from a list containing datasets in batches of
    a specific size. These can be used as inputs to sqt2pin, msgfplus2pin or tandem2pin.
    Use this feature when you want to batch a specific amount of input search results
    to run in percolator, as opposed to one at a time. Or if you can find another tool with
    a suitable use case, that will be fine too.
    This tool generates a collection containing pools which are collections that contain
    multiple batches of input files. The pools are specified as a pattern in the input
    files which makes sure the batching isn't continued through very different input sets
    if that is a problem. Instead, for each filename-pattern it generates batches of the
    specified size.
    </help>
</tool>
