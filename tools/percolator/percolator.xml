<tool id="percolator" name="Percolator" version="2.10">
    <description>accurate peptide identification</description>
    <requirements>
        <requirement type="package" version="2.10">percolator</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:"/>
    </stdio>
    <command>python $__tool_directory__/percolator.py
    protein=$fido.enable
    #if $fido.enable
        fido-alpha=$fido.alpha fido-beta=$fido.beta fido-gamma=$fido.gamma
        fido-empirical-protein-q=$fido.empirical fido-pattern=$fido.decoypattern
        fido-gridsearch-depth=$fido.griddepth fido-fast-gridsearch=$fido.fastgrid
        fido-no-split-large-components=$fido.nosplit fido-gridsearch-mse-threshold=$fido.gridmse
    #end if
    default-direction=$default_direction unitnorm=$unitnorm override=$override
    seed=$seed klammer=$klammer no-schema-validation=$no_schema_validation
    Cpos=$cpos Cneg=$cneg trainFDR=$trainfdr testFDR=$testfdr maxiter=$maxiter
    quick-validation=$quickval
    $percoout $input $output_type
    </command>
    <inputs>
    <param name="output_type" label="What filetype to output" type="select" display="radio">
        <option value="xml" selected="true">percolator XML (for further processing)</option>
	<option value="tsv">Tab-separated</option>
    </param>
    <conditional name="fido">
        <param name="enable" label="Output protein level probabilities?" type="boolean"/>
        <when value="false" />
        <when value="true">
            <param name="alpha" type="float" label="Fido alpha parameter value" help="Probability with which a present protein emits an associated peptide. Do not specify when using grid search" optional="true" />
            <param name="beta" type="float" label="Fido beta parameter value" optional="true" help="Probability of creation of a peptide from noise. Do not specify when using grid search" />
            <param name="gamma" type="float" label="Fido gamma parameter value" optional="true" help="Prior probability that protein is present in sample. Do not specify when using grid search." />
            <param name="empirical" label="Estimate empirical p and q-values using target-decoy" type="boolean" />
            <param name="decoypattern" type="text" label="Decoy text pattern to identify decoy proteins. Default is 'random'" />
            <param name="griddepth" type="select" label="Grid parameter search depth (0=fastest)" >
              <option value="0" selected="true">0</option>
              <option value="1">1</option>
              <option value="2">2</option>
            </param>
            <param name="fastgrid" type="float" label="Fast gridsearch threshold" help="Apply optional threshold to probabilities to obtain faster search for alpha, beta, gamma parameters. Default=0, recommended when set=0.2" optional="true" />
            <param name="nosplit" type="boolean" label="Do not approximate posterior distribubtion by allowing large graph components to be split into subgraphs." />
            <param name="truncthreshold" label="Truncation threshold" type="float" help="Speed up inference by assigning proteins without associated peptides above specified threshold a probability of 0. Default=0.01" optional="true" />
            <param name="gridmse" type="float" label="Gridsearch MSE threshold" help="Q-value threshold used in computation of MSE and ROC AUC score in grid search. Recommended 0.05 for normal size datasets and 0.1 for big datasets. Default=0.1" optional="true" />
        </when>
    </conditional>
    <param name="input" type="data" format="percin" label="Percolator input data" />
    <param name="cpos" label="Penalty for mistakes on positive examples" type="float" optional="true" />
    <param name="cneg" label="Penalty for mistakes on negative examples" type="float" optional="true" />
    <param name="trainfdr" label="FDR threshold to define positive examples" type="float" optional="true" help="Set by cross validation if 0."/>
    <param name="testfdr" label="FDR threshold for evaluating best cross validation result" type="float" optional="true" />
    <param name="maxiter" label="Maximal number of iterations" type="integer" optional="true" />
    <param name="quickval" label="Quicker execution by reduced internal cross-validation" type="boolean" />
    <param name="default_direction" label="Most informative feature given as feature number" type="integer" optional="true" />
    <param name="unitnorm" type="boolean" label="Unit normalization instead of standard deviation"/>
    <param name="override" label="Override error check?" help="and no fallback on default score vector in case of suspect score vector" type="boolean"/>
    <param name="seed" label="Seed of random number generator" type="integer" optional="true" />
    <param name="klammer" label="Retention time features calculated as in Klammer et al?" type="boolean" />
    <param name="no_schema_validation" label="Skip validation of input against XML schema" type="boolean" checked="true"/>
    </inputs>

    <outputs>
        <data format="percout" name="percoout">
		<change_format>
			<when input="output_type" value="tsv" format="tsv" />
		</change_format>
	</data>
    </outputs>
    <tests>
        <test>
            <param name="input" value="percolatorTab" />
        </test>
        <test>
            <param name="input" value="percolatorTab" />
            <param name="klammer" value="true" />
        </test>
        <test>
            <param name="input" value="percolatorTab" />
            <param name="fido|enable" value="true" />
        </test>
    </tests>
    <help>The first step in analyzing an mass spectrometry assay is to match the harvested spectra against a target database using database search engines such as Sequest and Mascot, a process that renders list of peptide-spectrum matches. However, it is not trivial to assess the accuracy of these identifications.

Percolator uses a semi-supervised machine learning to discriminate correct from incorrect peptide-spectrum matches, and calculates accurate statistics such as q-value (FDR) and posterior error probabilities. 
    </help>
    <citations>
        Percolator was firstly published in
        
            Lukas Käll, Jesse Canterbury, Jason Weston, William Stafford Noble and Michael J. MacCoss.
            Semi-supervised learning for peptide identification from shotgun proteomics datasets
            Nature Methods 4:923 – 925, November 2007
        
        Pecolator’s q-value calculation method is described in
        
            Lukas Käll, John D. Storey, Michael J. MacCoss and William Stafford Noble
            Assigning confidence measures to peptides identified by tandem mass spectrometry
            Journal of Proteome Research, 7(1):29-34, January 2008
        
        and percolator’s posterior error probability calculation method is described in
        
            Lukas Käll, John D. Storey and William Stafford Noble
            Nonparametric estimation of posterior error probabilities associated with peptides identified by tandem mass spectrometry
            Bioinformatics, 24(16):i42-i48, August 2008
    </citations>
</tool>
