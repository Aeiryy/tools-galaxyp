var GalaxyHistoryReader=function(a){return{configure:function(a){this.historyID=a.historyID}}}(GalaxyHistoryReader||{}),ConfigurationObject=function(){this.href="",this.tableRowCount={},this.tableColumns={},this.dataSetID=""},SQLDataViewer=function(a){return a.dataTables=["psmDT","overviewDT"],a.gridsToClear=["#psmDataTable","#overviewDataTable","#overviewDataTableFilters","#psmScoreFilters","#psmDataTableFilters"],a.dataGrids={PSM:{grid:"psmDataTable",table:"psmDT"},Proteins:{grid:"overviewDataTable",table:"overviewDT"},Peptides:{grid:"overviewDataTable",table:"overviewDT"}},a.detailRequestObject=null,a.overviewRequestObject=null,a.tablesExist=function(){var a=!1;return SQLDataViewer.dataTables.map(function(b){$.fn.DataTable.isDataTable($("#"+b))&&(a=!0)}),a},a.cleanTables=function(){SQLDataViewer.tablesExist()&&SQLDataViewer.gridsToClear.map(function(a){$(a).empty()})},a.rowSelectionFunctions=function(a){var b={prep:{psmDT:function(a){$(a).toggleClass("selected")},overviewDT:function(b){$("#"+a+" tr ").not(b).removeClass("selected"),$(b).toggleClass("selected")}},create:{psmDT:function(b){LorikeetFactory.createLorikeetModel({rowData:$("#"+a).DataTable().row(b).data(),callBackFn:function(a){var b;b=MSMSTabManager.activateTab(a.sequence,a.scanNum),$(b).specview(a),$("#score_table").hide()},url:DataManager.urlString}),$(b).toggleClass("selected").animate({"background-color":"#fbec88"},"slow","swing").delay(1e3).animate({"background-color":""},"slow","swing",function(){$(b).removeAttr("style")}),GUIUtils.goToElement("tabs")},overviewDT:function(b){DataManager.createPSMFromOverview($("#"+a).DataTable().row(b).data()),GUIUtils.goToElement("psmDataTable")}},clean:{psmDT:function(){},overviewDT:function(){$.fn.DataTable.isDataTable($("#psmDT"))&&($("#psmScoreFilters").empty(),$("#psmDataTableFilters").empty(),$("#psmDataTable").empty())}}};$("#"+a+" tbody").on("click","tr",function(){b.prep[a](this),this.classList.contains("selected")?(b.clean[a](),b.create[a](this)):b.clean[a]()})},a.createTable=function(b){var c=SQLDataViewer.dataGrids[b.tableName].grid,d=SQLDataViewer.dataGrids[b.tableName].table;b.filterGridFunction(),$("#"+c).html('<table cellpadding="0" cellspacing="0" border="0" class="display" id="'+d+'"></table>'),$("#"+d).dataTable({searching:!1,dom:'C<"top"i>tr<"bottom"flp><"clear">',scrollX:"100%",processing:!0,serverSide:!0,ajax:function(a,c,d){DataManager.ajaxDataProvider(a,d,b,c)},columns:b.generateColumnNames()}),a.rowSelectionFunctions(d)},a.createTableForSelection=function(b){var c=new RequestObject;c.tableName=b,"PSM"===b?a.detailRequestObject=c:a.overviewRequestObject=c,a.createTable(c)},a.produceVisualization=function(b){var c,d,e=new ConfigurationObject,f=$("#availableTables"),g=Object.keys(b.tableRowCount);for($("#mainTitle").text(b.pageTitle+" - "+b.dataName),console.log("History ID this dataset resides in: "+b.historyID),e.dataSetID=b.datasetID,e.href=b.href,e.tableColumns=b.tableColumns,e.tableRowCount=b.tableRowCount,DataManager.configure(e),b.isPSM&&(g=["PSM","Proteins","Peptides"]),c=0;c<g.length;c+=1)d=$("<option/>",{value:g[c],text:g[c]}),f.append(d);f.val("Proteins"),f.on("change",function(b){a.cleanTables(),a.createTableForSelection(b.target.value)}),a.createTableForSelection("Proteins")},a}(SQLDataViewer||{}),RequestObject=function(){this.customSQL="",this.scoreRangeObject={},this.scoreFilterObject=null,this.limit=1e3,this.offset=0,this.draw=0,this.callBackFn=null,this.orderColumn=null,this.orderDirection=null,this.needCount=!1,this.actualRecordCount=0,this.filteredRecordCount=0;var a="";this.filterGridFunction=function(){},this.overviewFilter={Proteins:null,Peptides:null},Object.defineProperty(this,"tableName",{set:function(b){switch(a=b,b){case"PSM":DataManager.createScoreRangeObject(this.setScoreRangeObject.bind(this));break;case"Proteins":case"Peptides":this.setFilterGridFunction(DataManager.createOverviewFilters)}this.needCount=!0,this.customSQL=SQLText.generateQuery(this.tableName)},get:function(){return a}})};RequestObject.prototype.setOverviewFilter=function(a){this.needCount=!0,this.overviewFilter[a.type]=a.value},RequestObject.prototype.clearOverviewFilter=function(){this.needCount=!0,this.overviewFilter={Proteins:null,Peptides:null}},RequestObject.prototype.makeNameArray=function(a){var b=[];return a.map(function(a){var c={};c.data=a.trim().split(".")[1],c.name=a.trim(),c.title=a.trim(),b.push(c)}),b},RequestObject.prototype.setScoreRangeObject=function(a){this.scoreRangeObject=a,$("#psmScoreFilters").append('<button id="score_toggle" class="grid-10">Toggle View</button>'),$("#score_toggle").on("click",function(){$("#score_table").toggle(500)}),$("#psmScoreFilters").append(ScoreFilterManager.generateScoreFilterTable(this.scoreRangeObject,function(){var a=$("#psmDT").DataTable();SQLDataViewer.detailRequestObject.scoreFilterObject=ScoreFilterManager.filterValues(),SQLDataViewer.detailRequestObject.needCount=!0,a.draw()}))},RequestObject.prototype.setFilterGridFunction=function(a){this.filterGridFunction=a},RequestObject.prototype.setFullDataCount=function(a){this.actualRecordCount=a.data[1][0]},RequestObject.prototype.setFilteredDataCount=function(a){this.filteredRecordCount=a.data[1][0]},RequestObject.prototype.cleanRawColumnNames=function(a){var b=[];return a.map(function(a){a.indexOf("CAST")>-1?b.push(a.split(/AS REAL\) AS /)[1].slice(1,-1)):a.indexOf("AS")>-1?b.push(a.split("AS")[0].trim()):b.push(a)}),b},RequestObject.prototype.generateColumnNames=function(){var a=[],b=null;if(this.customSQL.length>0){var c=this.customSQL.slice(this.customSQL.indexOf("SELECT")+6,this.customSQL.indexOf("FROM"));b=this.cleanRawColumnNames(c.split(","))}else b=DataManager.tableColumns[this.tableName].map(function(a){return a.indexOf(":")>-1?this.tableName+'."'+a+'"':this.tableName+"."+a},this);return a=this.makeNameArray(b)},RequestObject.prototype.generateProtPepQuery=function(){var a={Proteins:{column:"dbsequence.accession",likeClause:"SELECT dbsequence.accession FROM dbsequence WHERE dbsequence.accession LIKE ",queryStr:"SELECT dbs.accession, dbs.description, count(si.pkid)FROM spectrum, peptide, DBSequence dbs, peptideevidence pe, spectrumidentification si, score WHERE pe.dbsequence_pkid = dbs.pkid AND pe.peptide_pkid = peptide.pkid AND pe.spectrumidentification_pkid = si.pkid AND si.spectrum_pkid = spectrum.pkid AND score.spectrumidentification_pkid = si.pkid  AND Accession in (LIST_VALUES) GROUP BY dbs.accession "},Peptides:{column:"peptide.sequence",likeClause:"SELECT peptide.sequence FROM peptide WHERE peptide.sequence LIKE ",queryStr:"SELECT peptide.sequence, count(si.pkid)FROM spectrum, peptide, DBSequence dbs, peptideevidence pe, spectrumidentification si, score WHERE pe.dbsequence_pkid = dbs.pkid AND pe.peptide_pkid = peptide.pkid AND pe.spectrumidentification_pkid = si.pkid AND si.spectrum_pkid = spectrum.pkid AND score.spectrumidentification_pkid = si.pkid AND peptide.sequence in (LIST_VALUES)  GROUP BY peptide.sequence"}},b=this.overviewFilter[this.tableName];return b.map(function(b){a[this.tableName].likeClause+='"%25'+b+'%25" OR '+a[this.tableName].column+" LIKE "}),a[this.tableName].likeClause=a[this.tableName].likeClause.slice(0,a[this.tableName].likeClause.lastIndexOf("OR")),a[this.tableName].queryStr=a[this.tableName].queryStr.replace("LIST_VALUES",a[this.tableName].likeClause),a[this.tableName].queryStr},RequestObject.prototype.generateSQL=function(a){var b,c=a||!1;return b=this.customSQL.length>0?this.customSQL:"SELECT * FROM "+this.tableName,this.overviewFilter[this.tableName]&&(b=this.generateProtPepQuery()),this.scoreFilterObject&&(b+=SQLText.createWhereFromFilter(this.scoreFilterObject)),this.orderColumn&&(b+=this.orderColumn.indexOf("Score")>-1?" ORDER BY CAST("+this.orderColumn+" AS REAL) "+this.orderDirection:" ORDER BY "+this.orderColumn+" "+this.orderDirection),this.limit>0&&(b+=" LIMIT "+this.limit+" OFFSET "+this.offset),c&&(b="SELECT COUNT(*) FROM ("+b.slice(0,b.indexOf("ORDER"))+")"),b};var ResponseObject=function(){this.draw=0,this.recordsTotal=0,this.recordsFiltered=0,this.data=[],this.error=null},DataManager=function(a){return a.getScoreRange=function(a,b){var c=DataManager.urlString,d=function(a){var c={};a.data[0].map(function(b,d){var e=b.slice(0,3),f=b.slice(4);f in c||(c[f]={}),c[f][e]=a.data[1][d]}),b(c)};c+=a,$.get(c,function(a){d(a)})},a.generateScoreRangeObject=function(b){var c=SQLText.generateScoreRangeQuery();a.getScoreRange(c,b)},a.generateResponseObject=function(a,b){var c=[],d=[],e=new ResponseObject;return b.generateColumnNames().map(function(a){c.push(a.data)}),a.data.splice(0,1),a.data.map(function(a){var b={};c.map(function(c,d){b[c]=a[d]}),d.push(b)}),e.draw=parseInt(b.draw),DataManager.tableRowCount[b.tableName]?(e.recordsTotal=DataManager.tableRowCount[b.tableName],e.recordsFiltered=e.recordsTotal):(e.recordsTotal=b.actualRecordCount,e.recordsFiltered=b.actualRecordCount),b.scoreFilterObject&&(e.recordsFiltered=b.filteredRecordCount),e.data=d,e},a.executeSQL=function(b,c){$.get(c,function(c){b.callBackFn(a.generateResponseObject(c,b))}).error(function(a){var b=$("<div>",{id:"ajax_error",title:"Query Error"}),c=$("<p>",{text:a.responseText});b.dialog({minWidth:200,height:200}),b.append(c),setTimeout(function(){b.dialog("close")},5e3)})},a.getDataCount=function(b){$.get(DataManager.urlString+b.generateSQL(!0),function(c){b.scoreFilterObject?b.setFilteredDataCount(c):b.setFullDataCount(c),b.needCount=!1,a.getData(b)})},a.getData=function(b){var c=DataManager.urlString;c+=b.generateSQL(),a.executeSQL(b,c)},a.psmFromOverview=function(a){var b,c=SQLText.generateQuery("accession"in a?"psmFromProtein":"psmFromPeptide");c=c.replace("REPLACE_PEP_PROT_TEXT","accession"in a?'"'+a.description+'"':'"'+a.sequence+'"'),b=new RequestObject,b.tableName="PSM",b.customSQL=c,SQLDataViewer.detailRequestObject=b,SQLDataViewer.createTable(b)},{configure:function(a){DataManager.hrefValue=a.href,DataManager.dataID=a.dataSetID,DataManager.tableRowCount=a.tableRowCount,DataManager.tableColumns=a.tableColumns,DataManager.urlString=a.href+"/api/datasets/"+a.dataSetID+"?data_type=raw_data&provider=sqlite-table&headers=True&query="},createOverviewFilters:function(){$("#overviewDataTableFilters").append(OverviewFilterManager.generateOverviewFilterTable())},createScoreRangeObject:function(b){a.generateScoreRangeObject(b)},createPSMFromOverview:function(b){a.psmFromOverview(b)},ajaxDataProvider:function(b,c,d,e){var f=d;f.callBackFn=e,f.limit=b.length,f.offset=b.start,f.draw=b.draw,b.order.length>0&&(f.orderColumn=b.columns[b.order[0].column].name,f.orderDirection=b.order[0].dir),f.needCount?a.getDataCount(f):a.getData(f)}}}(DataManager||{}),GUIUtils=function(a){return a.goToElement=function(a){$("html, body").animate({scrollTop:$("#"+a).offset().top},500)},a}(GUIUtils||{}),MSMSTabManager=function(a){return a.MAX_TABS=20,a.activeTabs={},0===Object.keys(a.activeTabs).length&&$("#tabs").tabs({activate:function(){$("#tabs").tabs("option","active")}}),a.activateTab=function(b,c){var d,e,f,g=b+" <small>"+c+"</small>";return 0===Object.keys(a.activeTabs).length&&($("#tabs").tabs().prepend('<button id="clear_all_btn" class="grid-5 suffix-95 submit"><small>Clear All</small></button>'),$("#clear_all_btn").on("click",a.clearAllActiveTabs)),Object.keys(a.activeTabs).length<this.MAX_TABS?g in a.activeTabs?null:(d=$("<li/>",{id:g}),d.append('<a href="#tab'+Object.keys(a.activeTabs).length+'">'+g+'</a><span class="ui-icon ui-icon-close" role="presentation" style="float: left; margin: 0.4em 0.2em 0 0; cursor: pointer;">Remove Tab</span>'),$("div#tabs ul").append(d),e=$("<div/>",{id:"tab"+Object.keys(a.activeTabs).length}),f=$("<div/>",{id:"lorikeet"+Object.keys(a.activeTabs).length}),e.append(f),$("div#tabs").append(e),$("div#tabs").tabs({event:"mouseover"}),$("div#tabs").tabs().find(".ui-tabs-nav").sortable({axis:"x",stop:function(){$("div#tabs").tabs("refresh")}}),$("div#tabs").tabs().delegate("span.ui-icon-close","click",function(){var b=$(this).closest("li"),c=b[0].id,d=$(this).closest("li").remove().attr("aria-controls");$("#"+d).remove(),delete a.activeTabs[c],0===Object.keys(a.activeTabs).length&&$("#clear_all_btn").remove(),$("div#tabs").tabs("refresh")}),$("div#tabs").tabs("refresh"),a.activeTabs[g]={liElement:d,divElement:e},f):null},a.deactivateTab=function(b,c){var d,e,f=b+" <small>"+c+"</small>";f in a.activeTabs&&(d=a.activeTabs[f].liElement,e=a.activeTabs[f].divElement,d.remove(),e.remove(),delete a.activeTabs[f]),0===Object.keys(a.activeTabs).length&&$("#clear_all_btn").remove()},a.clearAllActiveTabs=function(){var b,c,d="";for(d in a.activeTabs)c=a.activeTabs[d].liElement,b=a.activeTabs[d].divElement,c.remove(),b.remove(),delete a.activeTabs[d];0===Object.keys(a.activeTabs).length&&$("#clear_all_btn").remove()},a}(MSMSTabManager||{}),ScoreFilterManager=function(a){return a.filterValues=function(){var a,b,c,d,e=!1,f={};return $(".scoreFilter").map(function(){b=this.name.replace(/_/," "),c=b.slice(0,3),b=b.slice(4),isNaN(parseFloat(this.value))||(b in f||(f[b]={}),a=parseFloat(this.value),e=!0,f[b][c]=a)}),d=e?f:null},a.generateScoreFilterTable=function(a,b){var c,d,e,f=$("<div/>",{id:"score_table","class":"grid-100 grid-parent"}),g=$("<button>",{"class":"submit",text:"Filter By Scores"}),h=$("<button>",{"class":"submit",text:"Clear Filtering"});g.on("click",b),h.on("click",function(){$(".scoreFilter").val(""),b()}),$('<div class="grid-100 align-center"><strong>Filter PSMs by Score</strong></div>').appendTo(f),$('<div class="clear"></div>').appendTo(f);for(c in a)d=$("<div/>",{"class":"grid-50 grid-parent"}),d.append($("<div/>",{text:c,"class":"grid-100 align-center"})),d.append($("<div/>",{text:"MAX","class":"grid-50"})),d.append($("<div/>",{text:"MIN","class":"grid-50"})),d.append($("<input/>",{"class":"scoreFilter grid-50",id:"MAX_"+c,name:"MAX_"+c,placeholder:a[c].MAX})),d.append($("<input/>",{"class":"scoreFilter grid-50",id:"MIN_"+c,name:"MIN_"+c,placeholder:a[c].MIN})),f.append(d);return e=$("<div/>",{"class":"grid-50"}),e.append(g),e.append(h),f.append(e),f},a}(ScoreFilterManager||{}),OverviewFilterManager=function(a){return a.parseUserInput=function(){var a=$("#filter_value").val(),b=/[:|-|,|\s]/,c=[];return a?a.split(b).map(function(a){a.length>0&&c.push(a)}):c=null,c},a.generateOverviewFilterTable=function(){var b,c,d,e,f,g,h={Proteins:{fButtonText:"Filter Proteins",inputField:"Enter one accession or comma separated list of accessions.",labelInputField:"Find protein by accession(s)"},Peptides:{fButtonText:"Filter Peptides",inputField:"Enter one sequence or a comma separated list of sequences.",labelInputField:"Find peptides by sequence(s)"}};return b=$("<div/>",{id:"textFilter","class":"grid-50 grid-parent"}),c=$("<button>",{"class":"submit",text:h[SQLDataViewer.overviewRequestObject.tableName].fButtonText}),d=$("<button>",{"class":"submit",text:"Clear Filtering"}),e=$("<input/>",{type:"search",title:h[SQLDataViewer.overviewRequestObject.tableName].inputField,id:"filter_value",width:"100%"}),f=$("<label/>",{text:h[SQLDataViewer.overviewRequestObject.tableName].labelInputField}),c.on("click",function(){var b=a.parseUserInput(),c=$("#overviewDT").DataTable();SQLDataViewer.overviewRequestObject.setOverviewFilter({type:SQLDataViewer.overviewRequestObject.tableName,value:b}),c.draw()}),d.on("click",function(){var a=$("#overviewDT").DataTable();$("#filter_value").val(""),SQLDataViewer.overviewRequestObject.clearOverviewFilter(),a.draw()}),$('<p class="grid-100 align-center"><strong>Filter Proteins</strong></p>').appendTo(b),g=$("<div/>",{"class":"grid-25"}),g.append(f),g.after(b).appendTo(b),g=$("<div/>",{"class":"grid-75"}),g.append(e),g.appendTo(b),g.append(c),g.append(d),g.appendTo(b),b},a}(OverviewFilterManager||{}),TableSchemaWidget=function(a){return a.buildElement=function(a){var b,c,d,e;return b=$("<ul/>",{id:"schemaContainer"}),Object.keys(a).map(function(f){c=$("<li/>",{name:f,text:f,style:"cursor: pointer"}),c.on("click",function(a){"none"===a.target.firstElementChild.style.display?a.target.firstElementChild.style.display="block":a.target.firstElementChild.style.display="none"}),e=$("<ul/>",{id:"ul_"+f,style:"display: none",name:f}),a[f].map(function(a){d=$("<li/>",{id:a,name:a,text:a}),d.draggable({helper:"clone"}),e.append(d)}),c.append(e),b.append(c)}),b},{generateSchemaWidget:function(b){return a.buildElement(b)}}}(TableSchemaWidget||{}),SQLEditorPopulator=function(a){return a.dropBehavior=function(a,b){var c,d,e,f,g,h,i=this.value;0===i.length?(this.value="SELECT "+b.draggable[0].parentNode.id.replace("ul_","")+'."'+b.draggable.text()+'" ',this.value+=" FROM "+b.draggable[0].parentNode.id.replace("ul_","")):(d=i.toLocaleUpperCase().indexOf(" SELECT "),f=i.toLocaleUpperCase().indexOf(" FROM "),h=i.toLocaleUpperCase().indexOf(" WHERE "),c=i.slice(d+8,f),e=i.slice(f+6,h>-1?h:i.length),g=h>-1?i.slice(h+7,i.length):"",c+=", "+b.draggable[0].parentNode.id.replace("ul_","")+'."'+b.draggable.text()+'" ',-1===e.indexOf(b.draggable[0].parentNode.id.replace("ul_",""))&&(e+=", "+b.draggable[0].parentNode.id.replace("ul_","")),this.value="SELECT "+c+"FROM "+e+" WHERE "+g)},a}(SQLEditorPopulator||{}),LorikeetFactory=function(a){function b(){this.configSteps=[0,0,0],this.fnOnConfigured=null,this.properties={showInternalIonOption:!0,showMHIonOption:!0,showAllTable:!0,peakDetect:!1,scanPKID:null,sequence:null,staticMods:[],variableMods:[],ntermMod:0,ctermMod:0,peaks:[],massError:.01,scanNum:null,fileName:null,charge:null,precursorMz:null,ms1peaks:[],ms1scanLabel:null,precursorPeaks:null,precursorPeakClickFn:null,zoomMs1:!1,width:750,height:450,extraPeakSeries:[]}}var c={};return b.prototype.isConfigured=function(){var a=this.configSteps.reduce(function(a,b){return a+b});a===this.configSteps.length&&(c[this.properties.scanPKID]=this,this.fnOnConfigured(this.getOptions()))},b.prototype.getOptions=function(){var a={},b=null;for(b in this.properties)a[b]=this.properties[b];return a},b.prototype.getLorikeetSQL=function(a){var b="SELECT p.moz, p.intensity FROM peaks p,peptideevidence pe,spectrumidentification si WHERE si.spectrum_pkid = p.spectrum_pkid AND pe.spectrumidentification_pkid = si.pkid AND si.pkid = SPECTRUM_ID_PKID LIMIT 1",c="SELECT m.*  FROM peptideevidence pe, modification m, spectrumidentification si WHERE si.pkid = SPECTRUM_ID_PKID AND pe.peptide_pkid = m.peptide_pkid AND pe.spectrumidentification_pkid = si.pkid",d="";switch(a){case"peaks":d=b;break;case"mods":d=c}return d},b.prototype.executeSQL=function(a){$.get(a.urlValue,function(b){var c=LorikeetFactory.formatAPIData(b);a.data=c,a.callBackFn(a)})},b.prototype.setModifications=function(a){var b,c={},d=[];for(a.data.columns.map(function(a,b){c[a.title]=b}),b=0;b<a.data.rows.length;b+=1)d.push({index:a.data.rows[b][c.location],modMass:a.data.rows[b][c.monoisotopicMassDelta],aminoAcid:a.data.rows[b][c.residues]});this.properties.variableMods=d,this.configSteps[2]=1,this.isConfigured()},b.prototype.setPeaks=function(a){var b=JSON.parse(a.data.rows[0][0]),c=JSON.parse(a.data.rows[0][1]);2===a.mslevel?(b.map(function(a,b){this.properties.peaks.push([a,c[b]])}.bind(this)),this.configSteps[0]=1):(b.map(function(a,b){this.properties.ms1peaks.push([a,c[b]])}.bind(this)),this.configSteps[1]=1),this.isConfigured()},b.prototype.getPeaks=function(a){var b=this.getLorikeetSQL("peaks");b=b.replace("SPECTRUM_ID_PKID",this.properties.scanPKID),a+=b,this.executeSQL({urlValue:a,mslevel:2,callBackFn:this.setPeaks.bind(this),data:null}),this.properties.precursorScanNumber||(this.configSteps[1]=1)},b.prototype.getModifications=function(a){var b;this.properties.modNum>0?(b=this.getLorikeetSQL("mods"),b=b.replace("SPECTRUM_ID_PKID",this.properties.scanPKID),a+=b,this.executeSQL({urlValue:a,callBackFn:this.setModifications.bind(this),data:null})):(this.configSteps[2]=1,this.isConfigured())},a.formatAPIData=function(a){var b=a.data.splice(0,1),c=null,d=[],e=0;for(e=0;e<b[0].length;e+=1)d.push({title:b[0][e],visible:"pkid"===b[0][e]?!1:!0});return c={columns:d,rows:a.data}},a.createLorikeetModel=function(a){var d,e=a.rowData,f=a.callBackFn,g=a.url;c[e.pkid]?f(c[e.pkid].getOptions()):(d=new b,d.properties.scanPKID=e.pkid,d.properties.sequence=e.sequence,d.properties.scanNum=e.acquisitionNum,d.properties.charge=e.precursorCharge,d.properties.precursorMz=e.precursorMZ,d.properties.fileName=e.title,d.properties.modNum=e.modNum,d.properties.precursorScanNumber=e.precursorScanNum,d.fnOnConfigured=f,d.getPeaks(g),d.getModifications(g))},a}(LorikeetFactory||{}),SQLText=function(a){var b="SELECT dbs.accession, dbs.description, count(si.pkid)FROM spectrum, peptide, DBSequence dbs, peptideevidence pe, spectrumidentification si, score WHERE pe.dbsequence_pkid = dbs.pkid AND pe.peptide_pkid = peptide.pkid AND pe.spectrumidentification_pkid = si.pkid AND si.spectrum_pkid = spectrum.pkid AND score.spectrumidentification_pkid = si.pkid GROUP BY dbs.accession ",c="SELECT peptide.sequence,count(si.pkid)FROM spectrum, peptide, DBSequence dbs, peptideevidence pe, spectrumidentification si, score WHERE pe.dbsequence_pkid = dbs.pkid AND pe.peptide_pkid = peptide.pkid AND pe.spectrumidentification_pkid = si.pkid AND si.spectrum_pkid = spectrum.pkid AND score.spectrumidentification_pkid = si.pkid GROUP BY peptide.sequence ",d=",Spectrum.precursorCharge,Spectrum.precursorIntensity,Spectrum.title, Peptide.sequence,Peptide.modNum,dbs.accession, si.pkid ,pe.isDecoy,Spectrum.acquisitionNum,Spectrum.msLevel,Spectrum.polarity,Spectrum.peaksCount,Spectrum.totIonCurrent,Spectrum.retentionTime,Spectrum.basePeakMZ,Spectrum.basePeakIntensity,Spectrum.collisionEnergy,Spectrum.ionisationEnergy,Spectrum.lowMZ,Spectrum.highMZ,Spectrum.precursorScanNum,Spectrum.precursorMZ FROM spectrum, peptide, peptideevidence pe, DBSequence dbs, spectrumidentification si, score WHERE pe.dbsequence_pkid = dbs.pkid AND peptide.sequence = REPLACE_PEP_PROT_TEXT AND pe.peptide_pkid = peptide.pkid AND pe.spectrumidentification_pkid = si.pkid AND si.spectrum_pkid = spectrum.pkid AND score.spectrumidentification_pkid = si.pkid",e=",Spectrum.precursorCharge,Spectrum.precursorIntensity,Spectrum.title, Peptide.sequence,Peptide.modNum,dbs.accession, si.pkid ,pe.isDecoy,Spectrum.acquisitionNum,Spectrum.msLevel,Spectrum.polarity,Spectrum.peaksCount,Spectrum.totIonCurrent,Spectrum.retentionTime,Spectrum.basePeakMZ,Spectrum.basePeakIntensity,Spectrum.collisionEnergy,Spectrum.ionisationEnergy,Spectrum.lowMZ,Spectrum.highMZ,Spectrum.precursorScanNum,Spectrum.precursorMZ FROM spectrum, peptide, DBSequence dbs, peptideevidence pe, spectrumidentification si, Score WHERE pe.dbsequence_pkid = dbs.pkid AND dbs.description = REPLACE_PEP_PROT_TEXT AND pe.peptide_pkid = peptide.pkid AND pe.spectrumidentification_pkid = si.pkid AND si.spectrum_pkid = spectrum.pkid AND score.spectrumidentification_pkid = si.pkid",f=",Spectrum.precursorCharge,Spectrum.precursorIntensity,Spectrum.title, Peptide.sequence,Peptide.modNum,dbs.accession, si.pkid ,pe.isDecoy,Spectrum.acquisitionNum,Spectrum.msLevel,Spectrum.polarity,Spectrum.peaksCount,Spectrum.totIonCurrent,Spectrum.retentionTime,Spectrum.basePeakMZ,Spectrum.basePeakIntensity,Spectrum.collisionEnergy,Spectrum.ionisationEnergy,Spectrum.lowMZ,Spectrum.highMZ,Spectrum.precursorScanNum,Spectrum.precursorMZ FROM spectrum, peptide, DBSequence dbs, peptideevidence pe, spectrumidentification si, Score WHERE pe.dbsequence_pkid = dbs.pkid AND pe.peptide_pkid = peptide.pkid AND pe.spectrumidentification_pkid = si.pkid AND si.spectrum_pkid = spectrum.pkid AND score.spectrumidentification_pkid = si.pkid",g="SELECT p.moz, p.intensity FROM peaks p,peptideevidence pe,spectrumidentification si WHERE si.spectrum_pkid = p.spectrum_pkid AND pe.spectrumidentification_pkid = si.pkid AND si.pkid = SPECTRUM_ID_PKID LIMIT 1",h="SELECT m.* FROM peptideevidence pe, modification m, spectrumidentification si WHERE si.pkid = SPECTRUM_ID_PKID AND pe.peptide_pkid = m.peptide_pkid AND pe.spectrumidentification_pkid = si.pkid",i={peptides:c,proteins:b,psm:f,psmFromProtein:e,psmFromPeptide:d,peaks:g,modifications:h};return a.generateScoreQuery=function(a){var b=["spectrum_identification_id","SpectrumIdentification_pkid","pkid"],c="SELECT ",d=a||"REGULAR";return DataManager.tableColumns.Score.map(function(a){if(-1===b.indexOf(a))switch(d){case"MIN_MAX":c+='MAX(CAST(Score."'+a+'" AS REAL)) AS "MAX '+a+'", MIN(CAST(Score."'+a+'" AS REAL)) AS "MIN '+a+'",';break;default:c+='CAST(Score."'+a+'" AS REAL) AS \'Score."'+a+"\"', "}}),c.slice(0,c.lastIndexOf(","))},a.createPSMQuery=function(b){var c=a.generateScoreQuery();return c+=b},a.createPSMFromPeptideQuery=function(b){var c=a.generateScoreQuery();return c+=b},a.getQuery=function(b){switch(b){case"psm":return a.createPSMQuery(i.psm);case"psmfrompeptide":return a.createPSMFromPeptideQuery(i.psmFromPeptide);case"psmfromprotein":return a.createPSMFromPeptideQuery(i.psmFromProtein)}return i[b]},{createWhereFromFilter:function(a){var b,c,d=" AND ",e={MAX:"<=",MIN:">="};for(b in a)for(c in a[b])d+=' Score."'+b+'" '+e[c]+" "+a[b][c]+" AND ";return d.slice(0,-5).replace(/\s+/g,"+")},generateQuery:function(b){return a.getQuery(b.toLocaleLowerCase())},generateScoreRangeQuery:function(){return a.generateScoreQuery("MIN_MAX")+" FROM Score"}}}(SQLText||{});